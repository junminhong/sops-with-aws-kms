---
name: Sync changed env file to s3

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_BUCKET_NAME: your_aws_bucket
  AWS_REGION: us-east-1

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      prod: ${{ steps.changes.outputs.prod }}
      prod_files: ${{ steps.changes.outputs.prod_files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Detect environment changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          list-files: "json"
          filters: |
            prod:
              # 根據專案位置調整
              - '*/prod/**'

      - name: Changes summary
        run: |
          set -euo pipefail
          echo "prod=${{ steps.changes.outputs.prod }}"
          if [ "${{ steps.changes.outputs.prod }}" = "true" ]; then
            echo "prod_files=${{ steps.changes.outputs.prod_files }}"
          fi

  decrypt-and-upload-prod:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.prod == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install Task
        run: |
          # Install Task
          sudo sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
          task --version

      - name: Install dependencies
        run: |
          # Install sops
          sudo apt-get update
          sudo apt-get install -y wget
          wget -O /tmp/sops https://github.com/getsops/sops/releases/latest/download/sops-v3.10.2.linux.amd64
          sudo chmod +x /tmp/sops
          sudo mv /tmp/sops /usr/local/bin/sops

      - name: Verify dependencies
        run: |
          # Verify all dependencies are correctly installed
          task setup

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::{account_id}:role/{role_name}
          aws-region: ${{ env.AWS_REGION || 'us-east-1' }}

      - name: Decrypt prod files
        run: |
          echo "Decrypting production files..."
          echo "Changed files: ${{ needs.detect-changes.outputs.prod_files }}"

          echo '${{ needs.detect-changes.outputs.prod_files }}' | jq -r '.[]' | while read file; do
            if [[ "$file" == */prod/* ]] && [[ "$file" =~ \.(yaml|yml|json|env)$ ]]; then
              echo "Decrypting: $file"

              project=$(echo "$file" | cut -d'/' -f1)
              env=$(echo "$file" | cut -d'/' -f2)

              task decrypt project="$project" env="$env"
            fi
          done

      - name: Upload to S3
        run: |
          echo "Uploading decrypted files to S3..."
          echo '${{ needs.detect-changes.outputs.prod_files }}' | jq -r '.[]' | while read file; do
            if [[ "$file" == */prod/* ]] && [[ "$file" =~ \.(yaml|yml|json|env)$ ]]; then
              echo "Uploading: $file to s3://${{ env.AWS_BUCKET_NAME }}/$file"

              aws s3 cp $file "s3://${{ env.AWS_BUCKET_NAME }}/$file"
            fi
          done
